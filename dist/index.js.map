{"version":3,"sources":["../src/index.js","../src/state.js","../src/update.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;sBAGe;AACX,qDADW;AAEX;AAFW,K;;;;;;;;;;;;;;;;;;;;YCHC,kB,GAAA,kB;YAsBA,Q,GAAA,Q;AAtBT,aAAS,kBAAT,CAA4B,OAA5B,EAAqC;AACxC,YAAM,QAAQ;AACV,kBAAM,CADI;AAEV,qBAAS,CAFC;AAGV,kBAAM,KAAK,GAAL,EAHI;AAIV,2BAAe,EAJL;AAKV,oBAAQ;AALE,SAAd;;AAQA,gBAAQ,aAAR,CAAsB,OAAtB,CAA8B,wBAAgB;AAC1C,gBAAI,aAAa,YAAjB,EAA+B;AAC3B,sBAAM,aAAN,CAAoB,aAAa,EAAjC,IAAuC,aAAa,YAAb,EAAvC;AACH,aAFD,MAEO;AACH,sBAAM,aAAN,CAAoB,aAAa,EAAjC,IAAuC,EAAvC;AACH;;AAED,kBAAM,MAAN,CAAa,aAAa,EAA1B,IAAgC,SAAS,YAAT,EAAuB,KAAvB,EAA8B,CAA9B,CAAhC;AACH,SARD;;AAUA,eAAO,KAAP;AACH;;AAEM,aAAS,QAAT,CAAkB,YAAlB,EAAgC,SAAhC,EAA2C;AAC9C,YAAI,CAAC,aAAa,KAAlB,EAAyB;AACrB,mBAAO,EAAP;AACH;;AAED,eAAO,aAAa,KAAb,CAAmB,SAAnB,CAAP;AACH;;;;;;;;;;;;;;;;;;;;sBCDuB,M;;;AAzBxB,aAAS,UAAT,CAAoB,SAApB,EAA+B,KAA/B,EAAsC,YAAtC,EAAoD;AAChD,YAAM,QAAQ,EAAd;;AAEA,YAAM,eAAe,MAAM,MAAN,CAAa,aAAa,EAA1B,CAArB;AACA,eAAO,IAAP,CAAY,YAAZ,EAA0B,OAA1B,CAAkC,oBAAY;AAC1C,gBAAM,cAAc,MAAM,aAAN,CAAoB,QAApB,KAAiC,UAAU,aAAV,CAAwB,QAAxB,CAArD;AACA,6BAAiB,WAAjB,EAA8B,aAAa,QAAb,CAA9B,EAAsD,KAAtD,EAA6D,aAAa,EAA1E,EAA8E,QAA9E;AACH,SAHD;;AAKA,eAAO,KAAP;AACH;;AAED,aAAS,gBAAT,CAA0B,WAA1B,EAAuC,MAAvC,EAA+C,KAA/C,EAAsD,QAAtD,EAAgE,QAAhE,EAA0E;AACtE,YAAM,iBAAiB,OAAO,EAAP,IAAa,OAAO,QAA3C;AACA,YAAM,MAAO,OAAO,OAAO,GAAd,KAAsB,QAAvB,GAAmC,OAAO,GAA1C,GAAgD,YAAY,OAAO,QAAnB,CAA5D;AACA,YAAM,QAAQ,KAAK,GAAL,CAAS,YAAY,OAAO,QAAnB,CAAT,EAAuC,GAAvC,CAAd;;AAEA,gBAAQ,GAAR,CAAe,QAAf,SAA2B,cAA3B,UAA8C,KAA9C,cAA4D,QAA5D,SAAwE,OAAO,QAA/E,UAA4F,YAAY,OAAO,QAAnB,CAA5F;;AAEA,YAAI,CAAC,OAAO,QAAZ,EAAsB;AAClB,wBAAY,OAAO,QAAnB,KAAgC,KAAhC;AACH;AACD,cAAM,cAAN,IAAwB,KAAxB;AACH;;AAEc,aAAS,MAAT,CAAgB,OAAhB,EAAyB,SAAzB,EAAoC;AAC/C,YAAM,QAAQ;AACV,kBAAM,UAAU,IAAV,GAAiB,CADb;AAEV,kBAAM,KAAK,GAAL,EAFI;AAGV,2BAAe,EAHL;AAIV,oBAAQ;AAJE,SAAd;;AAOA,gBAAQ,aAAR,CAAsB,OAAtB,CAA8B,wBAAgB;AAC1C,kBAAM,MAAN,CAAa,aAAa,EAA1B,IAAgC,qBAAS,YAAT,EAAuB,UAAU,aAAV,CAAwB,aAAa,EAArC,CAAvB,CAAhC;AACH,SAFD;;AAIA,gBAAQ,aAAR,CAAsB,OAAtB,CAA8B,wBAAgB;AAC1C,kBAAM,aAAN,CAAoB,aAAa,EAAjC,IAAuC,EAAvC;;AAEA,gBAAI,CAAC,aAAa,MAAlB,EAA0B;AACtB;AACH;;AAED,gBAAM,QAAQ,WAAW,SAAX,EAAsB,KAAtB,EAA6B,YAA7B,CAAd;;AAEA,kBAAM,aAAN,CAAoB,aAAa,EAAjC,IAAuC,aAAa,MAAb,CAAoB,UAAU,aAAV,CAAwB,aAAa,EAArC,CAApB,EAA8D,KAA9D,CAAvC;AACH,SAVD;;AAYA;AACA;AACA;AACA;AACA;;AAEA,eAAO,KAAP;AACH","file":"index.js","sourcesContent":["import {createInitialState} from '../src/state';\nimport update from '../src/update';\n\nexport default {\n    createInitialState,\n    update,\n};\n","export function createInitialState(program) {\n    const state = {\n        tick: 0,\n        seconds: 0,\n        time: Date.now(),\n        stateMachines: {},\n        inputs: {},\n    };\n\n    program.stateMachines.forEach(stateMachine => {\n        if (stateMachine.initialState) {\n            state.stateMachines[stateMachine.id] = stateMachine.initialState()\n        } else {\n            state.stateMachines[stateMachine.id] = {};\n        }\n\n        state.inputs[stateMachine.id] = getInput(stateMachine, state, 0);\n    });\n\n    return state;\n}\n\nexport function getInput(stateMachine, prevState) {\n    if (!stateMachine.input) {\n        return {};\n    }\n\n    return stateMachine.input(prevState);\n}\n","import {getInput} from './state';\n\nfunction parseInput(prevState, state, stateMachine) {\n    const input = {};\n\n    const inputSources = state.inputs[stateMachine.id];\n    Object.keys(inputSources).forEach(sourceId => {\n        const sourceState = state.stateMachines[sourceId] || prevState.stateMachines[sourceId];\n        parseInputSource(sourceState, inputSources[sourceId], input, stateMachine.id, sourceId);\n    });\n\n    return input;\n}\n\nfunction parseInputSource(sourceState, source, input, parentId, sourceId) {\n    const targetProperty = source.as || source.property;\n    const max = (typeof source.max === 'number') ? source.max : sourceState[source.property];\n    const value = Math.min(sourceState[source.property], max);\n\n    console.log(`${parentId}.${targetProperty}: ${value} from ${sourceId}.${source.property} (${sourceState[source.property]})`);\n\n    if (!source.readOnly) {\n        sourceState[source.property] -= value;\n    }\n    input[targetProperty] = value;\n}\n\nexport default function update(program, prevState) {\n    const state = {\n        tick: prevState.tick + 1,\n        time: Date.now(),\n        stateMachines: {},\n        inputs: {},\n    };\n\n    program.stateMachines.forEach(stateMachine => {\n        state.inputs[stateMachine.id] = getInput(stateMachine, prevState.stateMachines[stateMachine.id]);\n    });\n\n    program.stateMachines.forEach(stateMachine => {\n        state.stateMachines[stateMachine.id] = {};\n\n        if (!stateMachine.update) {\n            return;\n        }\n\n        const input = parseInput(prevState, state, stateMachine);\n\n        state.stateMachines[stateMachine.id] = stateMachine.update(prevState.stateMachines[stateMachine.id], input);\n    });\n\n    // console.log(`tick ${state.tick}`);\n    // console.log(state.inputs);\n    // console.log('-----------------');\n    // console.log(state.stateMachines);\n    // console.log('=================');\n\n    return state;\n};\n"]}